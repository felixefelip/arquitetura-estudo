module Finance
  module Card
    class Entity < ::Finance::ApplicationRecord
      extend ::_ActiveRecord_Relation_ClassMethods[::Finance::Card::Entity, ::Finance::Card::Entity::ActiveRecord_Relation, ::Integer]

      module GeneratedAttributeMethods
        def id: () -> ::Integer

        def id=: (::Integer) -> ::Integer

        def id?: () -> bool

        def id_changed?: () -> bool

        def id_change: () -> [ ::Integer?, ::Integer? ]

        def id_will_change!: () -> void

        def id_was: () -> ::Integer?

        def id_previously_changed?: () -> bool

        def id_previous_change: () -> ::Array[::Integer?]?

        def id_previously_was: () -> ::Integer?

        def id_before_last_save: () -> ::Integer?

        def id_change_to_be_saved: () -> ::Array[::Integer?]?

        def id_in_database: () -> ::Integer?

        def saved_change_to_id: () -> ::Array[::Integer?]?

        def saved_change_to_id?: () -> bool

        def will_save_change_to_id?: () -> bool

        def restore_id!: () -> void

        def clear_id_change: () -> void

        def owner_full_name: () -> ::String?

        def owner_full_name=: (::String?) -> ::String?

        def owner_full_name?: () -> bool

        def owner_full_name_changed?: () -> bool

        def owner_full_name_change: () -> [ ::String?, ::String? ]

        def owner_full_name_will_change!: () -> void

        def owner_full_name_was: () -> ::String?

        def owner_full_name_previously_changed?: () -> bool

        def owner_full_name_previous_change: () -> ::Array[::String?]?

        def owner_full_name_previously_was: () -> ::String?

        def owner_full_name_before_last_save: () -> ::String?

        def owner_full_name_change_to_be_saved: () -> ::Array[::String?]?

        def owner_full_name_in_database: () -> ::String?

        def saved_change_to_owner_full_name: () -> ::Array[::String?]?

        def saved_change_to_owner_full_name?: () -> bool

        def will_save_change_to_owner_full_name?: () -> bool

        def restore_owner_full_name!: () -> void

        def clear_owner_full_name_change: () -> void

        def number: () -> ::String?

        def number=: (::String?) -> ::String?

        def number?: () -> bool

        def number_changed?: () -> bool

        def number_change: () -> [ ::String?, ::String? ]

        def number_will_change!: () -> void

        def number_was: () -> ::String?

        def number_previously_changed?: () -> bool

        def number_previous_change: () -> ::Array[::String?]?

        def number_previously_was: () -> ::String?

        def number_before_last_save: () -> ::String?

        def number_change_to_be_saved: () -> ::Array[::String?]?

        def number_in_database: () -> ::String?

        def saved_change_to_number: () -> ::Array[::String?]?

        def saved_change_to_number?: () -> bool

        def will_save_change_to_number?: () -> bool

        def restore_number!: () -> void

        def clear_number_change: () -> void

        def month_expiration: () -> ::Integer?

        def month_expiration=: (::Integer?) -> ::Integer?

        def month_expiration?: () -> bool

        def month_expiration_changed?: () -> bool

        def month_expiration_change: () -> [ ::Integer?, ::Integer? ]

        def month_expiration_will_change!: () -> void

        def month_expiration_was: () -> ::Integer?

        def month_expiration_previously_changed?: () -> bool

        def month_expiration_previous_change: () -> ::Array[::Integer?]?

        def month_expiration_previously_was: () -> ::Integer?

        def month_expiration_before_last_save: () -> ::Integer?

        def month_expiration_change_to_be_saved: () -> ::Array[::Integer?]?

        def month_expiration_in_database: () -> ::Integer?

        def saved_change_to_month_expiration: () -> ::Array[::Integer?]?

        def saved_change_to_month_expiration?: () -> bool

        def will_save_change_to_month_expiration?: () -> bool

        def restore_month_expiration!: () -> void

        def clear_month_expiration_change: () -> void

        def year_expiration: () -> ::Integer?

        def year_expiration=: (::Integer?) -> ::Integer?

        def year_expiration?: () -> bool

        def year_expiration_changed?: () -> bool

        def year_expiration_change: () -> [ ::Integer?, ::Integer? ]

        def year_expiration_will_change!: () -> void

        def year_expiration_was: () -> ::Integer?

        def year_expiration_previously_changed?: () -> bool

        def year_expiration_previous_change: () -> ::Array[::Integer?]?

        def year_expiration_previously_was: () -> ::Integer?

        def year_expiration_before_last_save: () -> ::Integer?

        def year_expiration_change_to_be_saved: () -> ::Array[::Integer?]?

        def year_expiration_in_database: () -> ::Integer?

        def saved_change_to_year_expiration: () -> ::Array[::Integer?]?

        def saved_change_to_year_expiration?: () -> bool

        def will_save_change_to_year_expiration?: () -> bool

        def restore_year_expiration!: () -> void

        def clear_year_expiration_change: () -> void

        def security_code: () -> ::Integer?

        def security_code=: (::Integer?) -> ::Integer?

        def security_code?: () -> bool

        def security_code_changed?: () -> bool

        def security_code_change: () -> [ ::Integer?, ::Integer? ]

        def security_code_will_change!: () -> void

        def security_code_was: () -> ::Integer?

        def security_code_previously_changed?: () -> bool

        def security_code_previous_change: () -> ::Array[::Integer?]?

        def security_code_previously_was: () -> ::Integer?

        def security_code_before_last_save: () -> ::Integer?

        def security_code_change_to_be_saved: () -> ::Array[::Integer?]?

        def security_code_in_database: () -> ::Integer?

        def saved_change_to_security_code: () -> ::Array[::Integer?]?

        def saved_change_to_security_code?: () -> bool

        def will_save_change_to_security_code?: () -> bool

        def restore_security_code!: () -> void

        def clear_security_code_change: () -> void

        def finance_client_id: () -> ::Integer

        def finance_client_id=: (::Integer) -> ::Integer

        def finance_client_id?: () -> bool

        def finance_client_id_changed?: () -> bool

        def finance_client_id_change: () -> [ ::Integer?, ::Integer? ]

        def finance_client_id_will_change!: () -> void

        def finance_client_id_was: () -> ::Integer?

        def finance_client_id_previously_changed?: () -> bool

        def finance_client_id_previous_change: () -> ::Array[::Integer?]?

        def finance_client_id_previously_was: () -> ::Integer?

        def finance_client_id_before_last_save: () -> ::Integer?

        def finance_client_id_change_to_be_saved: () -> ::Array[::Integer?]?

        def finance_client_id_in_database: () -> ::Integer?

        def saved_change_to_finance_client_id: () -> ::Array[::Integer?]?

        def saved_change_to_finance_client_id?: () -> bool

        def will_save_change_to_finance_client_id?: () -> bool

        def restore_finance_client_id!: () -> void

        def clear_finance_client_id_change: () -> void

        def created_at: () -> ::ActiveSupport::TimeWithZone

        def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

        def created_at?: () -> bool

        def created_at_changed?: () -> bool

        def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

        def created_at_will_change!: () -> void

        def created_at_was: () -> ::ActiveSupport::TimeWithZone?

        def created_at_previously_changed?: () -> bool

        def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

        def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

        def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

        def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

        def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

        def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

        def saved_change_to_created_at?: () -> bool

        def will_save_change_to_created_at?: () -> bool

        def restore_created_at!: () -> void

        def clear_created_at_change: () -> void

        def updated_at: () -> ::ActiveSupport::TimeWithZone

        def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

        def updated_at?: () -> bool

        def updated_at_changed?: () -> bool

        def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

        def updated_at_will_change!: () -> void

        def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

        def updated_at_previously_changed?: () -> bool

        def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

        def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

        def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

        def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

        def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

        def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

        def saved_change_to_updated_at?: () -> bool

        def will_save_change_to_updated_at?: () -> bool

        def restore_updated_at!: () -> void

        def clear_updated_at_change: () -> void
      end
      include GeneratedAttributeMethods

      def client: () -> ::Finance::Client::Entity
      def client=: (::Finance::Client::Entity?) -> ::Finance::Client::Entity?
      def reload_client: () -> ::Finance::Client::Entity?
      def build_client: (untyped) -> ::Finance::Client::Entity
      def create_client: (untyped) -> ::Finance::Client::Entity
      def create_client!: (untyped) -> ::Finance::Client::Entity
      module GeneratedAssociationMethods
      end
      include GeneratedAssociationMethods

      module GeneratedRelationMethods
      end

      class ActiveRecord_Relation < ::ActiveRecord::Relation
        include ::Finance::Card::Entity::GeneratedRelationMethods
        include ::_ActiveRecord_Relation[::Finance::Card::Entity, ::Integer]
        include ::Enumerable[::Finance::Card::Entity]
      end

      class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
        include ::Finance::Card::Entity::GeneratedRelationMethods
        include ::_ActiveRecord_Relation[::Finance::Card::Entity, ::Integer]
      end
    end
  end
end
